// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("pokedex");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", undefined, self[/* state */1][/* pokemon */0], React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */3], /* UpdatePokemon */[String(Caml_format.caml_int_of_string(self[/* state */1][/* pokemon */0]) + 1 | 0)]);
                                })
                            }, "buttan"));
            }),
          /* initialState */(function () {
              return /* record */[/* pokemon */ReasonReact.Router[/* dangerouslyGetInitialUrl */3](/* () */0)[/* hash */1]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              var p = action[0];
              return /* UpdateWithSideEffects */Block.__(2, [
                        /* record */[/* pokemon */p],
                        (function () {
                            if (p !== state[/* pokemon */0]) {
                              return ReasonReact.Router[/* push */0]("/#" + p);
                            } else {
                              return 0;
                            }
                          })
                      ]);
            }),
          /* subscriptions */(function (self) {
              return /* :: */[
                      /* Sub */[
                        (function () {
                            return ReasonReact.Router[/* watchUrl */1]((function (url) {
                                          return Curry._1(self[/* send */3], /* UpdatePokemon */[url[/* hash */1]]);
                                        }));
                          }),
                        ReasonReact.Router[/* unwatchUrl */2]
                      ],
                      /* [] */0
                    ];
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
